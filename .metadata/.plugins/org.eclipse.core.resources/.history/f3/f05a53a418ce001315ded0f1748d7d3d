package sample;

import java.io.IOException;

import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class ShortestPathReducer 
extends Reducer<LongWritable, Text, LongWritable, Text> {

	String nodes = "Not Assigned ";
	Text word = new Text();
	
	public void reduce(LongWritable key, Iterable<Text> values, Context context) 
										throws IOException, InterruptedException {
		int lowest = 10000;
		for(Text input : values){
			String[] value = input.toString().split(" ");
			if(value[0].equals("AdjacentNodes")){
				nodes = null;
				//Setting the adjacent node
				nodes = value[1];
			}else if(value[0].equals("NodeValue")){
				int distance = Integer.parseInt(value[1]);
				//Setting the Current node's distance
				lowest = Math.min(lowest, distance);
			}
		}
		word.set(lowest + " "+nodes);
		context.write(key, word);//
	}
}
